version: "3.3"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    env_file:
      - .env
    restart: "on-failure"
    depends_on:
      - postgres-db
    networks:
      - hospital-api

  postgres-db:
    image: postgis/postgis:10-2.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
    restart: "on-failure"
    networks:
      - hospital-api

  redis:
    container_name: "redis"
    image: "redis:alpine"
    command: redis-server --requirepass  admin123456
    networks: 
        - hospital-api
        
  nginx:
    restart: always
    image: nginx:1.21.6-alpine
#    build:
#      context: ./nginx
#      dockerfile: Dockerfile.dev
    depends_on:
      - api
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - hospital-api

networks:
  hospital-api:
    driver: bridge

volumes:
  postgres_data:
